import 'package:flutter/material.dart';
import 'random_percentage_widget.dart';

class SummaryTextBuilder {
  static Widget buildStoryText(
    BuildContext context,
    String text, {
    bool highlight = false,
    double? fontSize,
    TextAlign? textAlign,
    GlobalKey<RandomPercentageWidgetState>? randomKey,
  }) {
    final theme = Theme.of(context);
    return Padding(
      padding: EdgeInsets.symmetric(vertical: 12),
      child: RichText(
        textAlign: textAlign ?? TextAlign.left,
        text: TextSpan(
          style: TextStyle(
            fontSize: fontSize ?? (highlight ? 20 : 16),
            height: 1.6,
            fontWeight: highlight ? FontWeight.bold : FontWeight.normal,
            color: theme.colorScheme.onSurface,
          ),
          children: text
              .split('**')
              .asMap()
              .map((index, segment) {
                if (segment == '???%') {
                  return MapEntry(
                    index,
                    WidgetSpan(
                      alignment: PlaceholderAlignment.middle,
                      child: RandomPercentageWidget(
                        key: randomKey,
                        randomKey: randomKey,
                      ),
                    ),
                  );
                }
                return MapEntry(
                  index,
                  TextSpan(
                    text: segment,
                    style: TextStyle(
                      fontSize: index % 2 == 1
                          ? (fontSize ?? 24)
                          : (fontSize ?? (highlight ? 20 : 16)),
                      color: index % 2 == 1
                          ? theme.colorScheme.primary
                          : theme.colorScheme.onSurface,
                      fontWeight: index % 2 == 1
                          ? FontWeight.bold
                          : (highlight ? FontWeight.bold : FontWeight.normal),
                      height: 1.6,
                    ),
                  ),
                );
              })
              .values
              .toList(),
        ),
      ),
    );
  }

  static String getMorningBusComment(String busTime, int count) {
    int hour = int.parse(busTime.split(':')[0]);

    if (hour < 7) {
      return 'Êó©‰∏ä‰Ω†ÊúÄÂ∏∏ÈÄâÊã©ÁöÑÊòØ **$busTime** ÁöÑÊó©Áè≠ËΩ¶ÔºåÊòØ‰∏™Ëµ∑ÂæóÁâπÂà´Êó©ÁöÑÊó©Ëµ∑È∏üÂë¢ÔºåÁªßÁª≠‰øùÊåÅËøô‰∏™Â•Ω‰π†ÊÉØÂêßÔºÅ';
    } else if (hour < 9) {
      return 'Êó©‰∏ä‰Ω†ÊúÄÂ∏∏ÈÄâÊã©ÁöÑÊòØ **$busTime** ÁöÑÁè≠ËΩ¶Ôºå‰ΩúÊÅØÂæàËßÑÂæãÂë¢ÔºåÁªßÁª≠‰øùÊåÅÂÅ•Â∫∑ÁöÑÁîüÊ¥ªËäÇÂ•èÂêßÔºÅ';
    } else {
      return 'Êó©‰∏ä‰Ω†ÊúÄÂ∏∏ÈÄâÊã©ÁöÑÊòØ **$busTime** ÁöÑÁè≠ËΩ¶ÔºåÁúãÊù•‰Ω†Âæà‰∫´ÂèóÁù°Âà∞Ëá™ÁÑ∂ÈÜíÂë¢ÔºåËøôÊòØÂú®ÊèêÂâçÈÄÇÂ∫îÂ§ßÂéÇ‰ΩúÊÅØÂêóÔºüüòâ';
    }
  }

  static String getNightBusComment(String busTime, int count) {
    int hour = int.parse(busTime.split(':')[0]);

    if (hour < 21) {
      return 'Êôö‰∏ä‰Ω†ÊúÄÂ∏∏ÈÄâÊã©ÁöÑÊòØ **$busTime** ÁöÑÁè≠ËΩ¶ÔºåÁúãÊù•‰Ω†ÂæàÊ≥®ÈáçÂ∑•‰Ωú‰∏éÁîüÊ¥ªÁöÑÂπ≥Ë°°Âë¢ÔºÅ';
    } else {
      return 'Êôö‰∏ä‰Ω†ÊúÄÂ∏∏ÈÄâÊã©ÁöÑÊòØ **$busTime** ÁöÑÁè≠ËΩ¶ÔºåÊòØ‰∏™Âä™ÂäõÁöÑÂ§úÁå´Â≠êÂë¢ÔºåË¶ÅËÆ∞ÂæóÊ≥®ÊÑè‰ºëÊÅØÂì¶ÔºÅ';
    }
  }

  static String getViolationComment(int violationCount, double violationRate) {
    String baseText =
        'ÂÖ∂‰∏≠Êúâ **$violationCount** Ê¨°Êú™ËÉΩÊåâÊó∂Á≠æÂà∞ÔºåËøùÁ∫¶Áéá‰∏∫ **${violationRate.toStringAsFixed(1)}%**';

    if (violationRate == 0) {
      return '$baseTextÔºå‰Ω†Â§™Èù†Ë∞±‰∫ÜÔºå‰ªé‰∏çÁàΩÁ∫¶ÔºÅ';
    } else if (violationRate <= 5) {
      return '$baseTextÔºåÂÅ∂Â∞î‰πü‰ºöÊúâÊÑèÂ§ñÂèëÁîüÔºå‰ΩÜ‰Ω†ÁöÑÂÆàÊó∂Ë°®Áé∞‰æùÁÑ∂ÂæàÊ£íÔºÅ';
    } else if (violationRate <= 15) {
      return '$baseTextÔºåËøòÈúÄË¶ÅÁªßÁª≠Âä™ÂäõÔºåÁõ∏‰ø°ÊòéÂπ¥‰∏ÄÂÆö‰ºöÊõ¥Â•ΩÔºÅ';
    } else {
      return '$baseTextÔºåËøô‰∏™ËøùÁ∫¶ÁéáÊúâÁÇπÈ´òÂì¶ÔºåÂª∫ËÆÆÊèêÂâç5ÂàÜÈíüÂà∞ËææÂÄôËΩ¶ÁÇπÔΩû';
    }
  }

  static String getShareText(
      Map<String, dynamic> summary, int randomPercentage) {
    return 'ÊàëÂú®${summary['year']}Âπ¥ÂÖ±È¢ÑÁ∫¶‰∫Ü${summary['totalRides']}Ê¨°Áè≠ËΩ¶ÔºåË∂ÖË∂ä‰∫Ü$randomPercentage%ÁöÑÈ©¨Ê±†Âè£üêÆüê¥ÔºåÂπ¥Â∫¶ÂÖ≥ÈîÆËØçÊòØ"${summary['keyword']}"ÔºÅÊù•Ëá™ Marchkov Helper';
  }
}
